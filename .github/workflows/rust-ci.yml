name: Rust CI
on:
  pull_request:
  push:
    branches: ['main']

defaults:
    run:
        shell: bash

permissions:
    contents: read

env:
  SOLO_CLUSTER_NAME: "solo-rust"
  SOLO_NAMESPACE: "solo-rust"
  SOLO_CLUSTER_SETUP_NAMESPACE: "solo-rust-cluster"
  SOLO_DEPLOYMENT: "solo-rust-deployment"
  CONSENSUS_NODE_VERSION: "v0.60.0-alpha.0"

jobs:
  format:
    runs-on: hiero-client-sdk-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: 'recursive'

      - name: Add `rustfmt` to toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . $HOME/.cargo/env
          rustup +nightly component add rustfmt  

      - name: Format

        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . $HOME/.cargo/env
          cargo +nightly fmt --check
  
  check:
    runs-on: hiero-client-sdk-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Setup NodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 18

      - name: Setup GCC and OpenSSL
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gcc libc6-dev libc-dev libssl-dev pkg-config openssl

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: 'recursive'

      - name: Rust Cache
        uses: step-security/rust-cache@94e3ae6a5bdb04807deb1cb2274adab839828881 # v2.8.0
        with:
          workspaces: |
            sdk/rust

      - name: Install pkg-config
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . $HOME/.cargo/env
          cargo check --examples --workspace
  
  test:
    needs: ['check']
    runs-on: hiero-client-sdk-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Setup NodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22

      - name: Setup GCC and OpenSSL
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gcc libc6-dev libc-dev libssl-dev pkg-config openssl

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: 'recursive'

      - name: Rust Cache
        uses: step-security/rust-cache@94e3ae6a5bdb04807deb1cb2274adab839828881 # v2.8.0
        with:
          workspaces: |
            .

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.18.3

      # Set up kind; needed for configuring the solo environment
      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s

      # Install solo and configure it for the safety checks
      - name: Install Solo
        run: npm install -g @hashgraph/solo@${{ vars.SOLO_VERSION }}

      - name: Configure Solo
        run: |
          echo "::group::Kind Create Cluster"
          kind create cluster -n "${SOLO_CLUSTER_NAME}"
          echo "::endgroup::"

          echo "::group::Solo Quick Start Single Deploy"
          # Configures the entire network including the consensus node, mirror node, rpc, and explorer
          solo quick-start single deploy
          echo "::endgroup::"

      - name: "Create env file"
        run: |
            touch .env
            echo TEST_OPERATOR_KEY="302e020100300506032b65700422042091132178e72057a1d7528025956fe39b0b847f200ab59b2fdd367017f3087137" >> .env
            echo TEST_OPERATOR_ID="0.0.2" >> .env
            echo TEST_NETWORK_NAME="localhost" >> .env
            echo TEST_RUN_NONFREE="1" >> .env
            cat .env

      - name: Test
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . $HOME/.cargo/env
          cargo test --workspace  
