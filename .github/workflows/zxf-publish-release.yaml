name: "Publish Release"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Existing Tag to Publish (eg: v3.7.0)"
        type: string
        required: true
      dry-run-enabled:
        description: "Dry Run Enabled"
        type: boolean
        required: false
        default: false
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  validate-release:
    name: Validate Release
    runs-on: hiero-client-sdk-linux-medium

    outputs:
      # Project tag
      tag: ${{ steps.tag.outputs.name }}
      # main package
      sdk-version: ${{ steps.tag.outputs.version }}
      sdk-prerelease: ${{ steps.tag.outputs.prerelease }}
      sdk-type: ${{ steps.tag.outputs.type }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.tag || '' }}
          fetch-depth: 0
          submodules: recursive

      - name: Install Semantic Version Tools
        run: |
            echo "::group::Download Semver Binary"
            sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/master
            echo "::endgroup::"
            echo "::group::Change SemVer Binary Permissions"
            sudo chmod +x /usr/local/bin/semver
            echo "::endgroup::"
            echo "::group::Show SemVer Binary Version Info"
            semver --version
            echo "::endgroup::"
            
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: 1.88.0
          components: rustfmt, toml-cli, cargo-info
    
      - name: Extract Cargo.toml Versions
        id: cargo-versions
        run: |
          SDK_PACKAGE_VERSION="$(toml get Cargo.toml package.version --raw)"
          SDK_PROTO_VERSION="$(toml get protobufs/Cargo.toml package.version --raw)"
          SDK_TCK_VERSION="$(toml get tck/Cargo.toml package.version --raw)"
          
          echo "sdk-version=${SDK_PACKAGE_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "sdk-proto-version=${SDK_PROTO_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "sdk-tck-version=${SDK_TCK_VERSION}" >>"${GITHUB_OUTPUT}"
      
      - name: Proto Subpackage Publish Required
        id: proto-required
        run: |
          PUBLISH_REQUIRED="false"
          CRATES=("hedera-proto" "hiero-sdk-proto")
          for CRATE in "${CRATES[@]}"; do
            if ! curl -sSLf "https://crates.io/api/v1/crates/${CRATE}/${{ steps.cargo-versions.outputs.sdk-proto-version }}" >/dev/null 2>&1;
                PUBLISH_REQUIRED="true"
            fi
          done
          echo "proto-publish-required=${PUBLISH_REQUIRED}" >>"${GITHUB_OUTPUT}"

      - name: Extract SDK Tag Information
        id: tag
        run: |
          REF_NAME="$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))"
          IS_VALID_SEMVER="$(semver validate "${REF_NAME}")"
          if [[ "${IS_VALID_SEMVER}" != "valid" ]]; then
            echo "::error title=Invalid Tag::The tag '${REF_NAME}' is not a valid SemVer tag."
            exit 1
          fi
          RELEASE_VERSION="$(semver get release "${REF_NAME}")"
          PREREL_VERSION="$(semver get prerel "${REF_NAME}")"
          PREREL_VERSION_LC="$(printf "%s" "${PREREL_VERSION}" | tr '[:upper:]' '[:lower:]')"
          IS_PRERELEASE="false"
          [[ -n "${PREREL_VERSION}" ]] && IS_PRERELEASE="true"
          PREREL_TYPE="unknown"
          if [[ "${IS_PRERELEASE}" == "true" ]]; then
            if [[ "${PREREL_VERSION_LC}" =~ "beta" ]]; then
              PREREL_TYPE="beta"
            else
              PREREL_TYPE="unknown"
            fi
          else
            PREREL_TYPE="production"
          fi
          FINAL_VERSION="${RELEASE_VERSION}"
          [[ -n "${PREREL_VERSION}" ]] && FINAL_VERSION="${RELEASE_VERSION}-${PREREL_VERSION}"
          TAG_NAME="v${FINAL_VERSION}"
          echo "name=${TAG_NAME}" >>"${GITHUB_OUTPUT}"
          echo "version=${FINAL_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "prerelease=${IS_PRERELEASE}" >>"${GITHUB_OUTPUT}"
          echo "type=${PREREL_TYPE}" >>"${GITHUB_OUTPUT}"

  publish:
    name: Publish SDK to crates.io
    needs:
      - validate-release
    runs-on: hiero-client-sdk-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.tag || '' }}
          submodules: recursive

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: 1.88.0
          components: rustfmt, toml-cli

      - name: Publish to crates.io
        env:
          CARGO_HG_TOKEN: ${{ secrets.CRATES_HG_TOKEN }}
        run: |
          export CARGO_REGISTRY_TOKEN="${CARGO_HG_TOKEN}"
          cargo publish --locked
