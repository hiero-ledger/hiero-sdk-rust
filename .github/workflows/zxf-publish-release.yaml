name: "Publish Release"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Existing Tag to Publish (eg: v3.7.0)"
        type: string
        required: true
      dry-run-enabled:
        description: "Dry Run Enabled"
        type: boolean
        required: false
        default: false
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  validate-release:
    name: Validate Release
    runs-on: hiero-client-sdk-linux-medium

    outputs:
      # Project tag
      tag: ${{ steps.tag.outputs.name }}
      # main package
      sdk-version: ${{ steps.tag.outputs.version }}
      sdk-prerelease: ${{ steps.tag.outputs.prerelease }}
      sdk-type: ${{ steps.tag.outputs.type }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.tag || '' }}
          fetch-depth: 0
          submodules: recursive

      - name: Extract SDK Tag Information
        id: tag
        run: |
          REF_NAME="$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))"
          IS_VALID_SEMVER="$(semver validate "${REF_NAME}")"
          if [[ "${IS_VALID_SEMVER}" != "valid" ]]; then
            echo "::error title=Invalid Tag::The tag '${REF_NAME}' is not a valid SemVer tag."
            exit 1
          fi
          RELEASE_VERSION="$(semver get release "${REF_NAME}")"
          PREREL_VERSION="$(semver get prerel "${REF_NAME}")"
          PREREL_VERSION_LC="$(printf "%s" "${PREREL_VERSION}" | tr '[:upper:]' '[:lower:]')"
          IS_PRERELEASE="false"
          [[ -n "${PREREL_VERSION}" ]] && IS_PRERELEASE="true"
          PREREL_TYPE="unknown"
          if [[ "${IS_PRERELEASE}" == "true" ]]; then
            if [[ "${PREREL_VERSION_LC}" =~ "beta" ]]; then
              PREREL_TYPE="beta"
            else
              PREREL_TYPE="unknown"
            fi
          else
            PREREL_TYPE="production"
          fi
          FINAL_VERSION="${RELEASE_VERSION}"
          [[ -n "${PREREL_VERSION}" ]] && FINAL_VERSION="${RELEASE_VERSION}-${PREREL_VERSION}"
          TAG_NAME="v${FINAL_VERSION}"
          echo "name=${TAG_NAME}" >>"${GITHUB_OUTPUT}"
          echo "version=${FINAL_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "prerelease=${IS_PRERELEASE}" >>"${GITHUB_OUTPUT}"
          echo "type=${PREREL_TYPE}" >>"${GITHUB_OUTPUT}"

  publish:
    name: Publish to crates.io
    needs:
      - validate-release
    runs-on: hiero-client-sdk-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.tag || '' }}
          submodules: recursive

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --locked
